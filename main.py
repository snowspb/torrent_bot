import requests
from bs4 import BeautifulSoup
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ rutracker.org
RUTRACKER_LOGIN = "snowspb"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ª–æ–≥–∏–Ω
RUTRACKER_PASSWORD = "1TV3o"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å

# –°–µ—Å—Å–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
session = requests.Session()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ rutracker.org
def login_to_rutracker():
    login_url = "https://rutracker.org/forum/login.php"
    payload = {
        "login_username": RUTRACKER_LOGIN,
        "login_password": RUTRACKER_PASSWORD,
        "login": "–í—Ö–æ–¥"
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    response = session.post(login_url, data=payload, headers=headers)
    if response.status_code == 200:
        print("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ rutracker.org –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ rutracker.org.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –Ω–∞ rutracker.org
def search_rutracker(query):
    url = "https://rutracker.org/forum/tracker.php"
    params = {
        "nm": query  # –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    response = session.get(url, params=params, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')

    results = []
    for row in soup.select('tr.tCenter.hl-tr'):
        title = row.select_one('td.t-title-col > div > a.tLink')
        if title:
            title_text = title.text.strip()
            link = "https://rutracker.org/forum/" + title['href']
            # –ò—â–µ–º magnet-—Å—Å—ã–ª–∫—É
            magnet_link = row.select_one('a.magnet-link')
            if magnet_link:
                magnet_url = magnet_link['href']
                results.append({"title": title_text, "link": link, "magnet": magnet_url})
            else:
                results.append({"title": title_text, "link": link, "magnet": None})

    return results

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ—Ä—Ä–µ–Ω—Ç–µ
def get_torrent_details(link):
    response = session.get(link)
    soup = BeautifulSoup(response.text, 'html.parser')

    # –ü—Ä–∏–º–µ—Ä –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    details = soup.select_one('div.post_body')  # –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    if details:
        return details.text.strip()
    return "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        ["üîç –ü–æ–∏—Å–∫ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤"],
        ["‚ÑπÔ∏è –ü–æ–º–æ—â—å", "üìö –û –±–æ—Ç–µ"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üîç –ü–æ–∏—Å–∫ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –Ω–∞ rutracker.org:")
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text("–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–∫–∞—Ç—å —Ç–æ—Ä—Ä–µ–Ω—Ç—ã –Ω–∞ rutracker.org. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –∏ –±–æ—Ç –Ω–∞–π–¥–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")
    elif text == "üìö –û –±–æ—Ç–µ":
        await update.message.reply_text("–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ –Ω–∞ rutracker.org. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.")
    else:
        # –ü–æ–∏—Å–∫ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤
        query = text
        results = search_rutracker(query)

        if results:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            context.user_data["results"] = results

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞
            keyboard = [
                [InlineKeyboardButton(result["title"], callback_data=str(index))]
                for index, result in enumerate(results[:5])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä—Ä–µ–Ω—Ç:", reply_markup=reply_markup)
        else:
            await update.message.reply_text("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ—Ä—Ä–µ–Ω—Ç –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    index = int(query.data)
    results = context.user_data["results"]
    selected_torrent = results[index]

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ—Ä—Ä–µ–Ω—Ç–µ
    details = get_torrent_details(selected_torrent["link"])

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    message = (
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {selected_torrent['title']}\n"
        f"–°—Å—ã–ª–∫–∞: {selected_torrent['link']}\n"
        f"Magnet: {selected_torrent['magnet'] or '–ù–µ –Ω–∞–π–¥–µ–Ω–∞'}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ:\n{details}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await query.message.reply_text(message)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    token = "7008517922:AAFTf1fAAjekuCLfjFwYZQl5sbtze-F1ew0"

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ rutracker.org
    login_to_rutracker()

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(token).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(handle_callback))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()